import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import preprocessing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score



dataset = pd.read_csv("letter-recognition.Data", sep=",")
X = dataset.iloc[:, 1:17]
Y = dataset.iloc[:, 0]
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.20, random_state=10)



scaler = StandardScaler()
scaler.fit(X_train)



X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)


mlp = MLPClassifier(hidden_layer_sizes=(250, 300), max_iter=1000000, activation='logistic')
mlp.fit(X_train, Y_train)


predictions = mlp.predict(X_test)
predictions


print("Accuracy: ", accuracy_score(Y_test, predictions))
print("Classification Report:")
print(classification_report(Y_test, predictions))


cm = confusion_matrix(Y_test, predictions)


plt.figure(figsize=(10, 8))
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues", xticklabels=mlp.classes_, yticklabels=mlp.classes_)
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()